{"version":3,"file":"static/js/115.fdbf1de0.chunk.js","mappings":"6LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,GAGd,C,mICqCD,UA3Ca,WACX,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACED,GAAW,GADb,mBAGuBE,EAAAA,EAAAA,IAAaR,GAHpC,OAGUS,EAHV,OAIIL,EAASK,GAJb,gDAMIC,EAAAA,GAAAA,MAAY,2BANhB,yBAQIJ,GAAW,GARf,6EADc,uBAAC,WAAD,wBAYdK,EACD,GAAE,CAACX,KAGF,gCACGK,IAAW,SAAC,IAAD,KACZ,yBACIA,GACAF,EAAMS,KAAI,SAAAH,GACR,OACE,2BACE,gBACEI,IAAG,yCAAoCJ,EAAKK,cAC5CC,IAAKN,EAAKO,KACVlB,MAAM,SAER,uBAAIW,EAAKO,QACT,yBAAG,cAAYP,EAAKQ,eAPbR,EAAKS,GAUjB,QAIV,C,mMC7CDC,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAS,mCAEFC,EAAS,mCAAG,oGACCF,EAAAA,EAAAA,IAAA,wCAA2CC,IAD5C,cACfE,EADe,yBAGdA,EAAQC,KAAKC,SAHC,2CAAH,qDAMTC,EAAY,mCAAG,WAAOP,GAAP,uFACFC,EAAAA,EAAAA,IAAA,mBAAsBD,EAAtB,oBAAoCE,EAApC,sCADE,cAClBE,EADkB,yBAEjBA,EAAQC,MAFS,2CAAH,sDAKZf,EAAY,mCAAG,WAAOU,GAAP,uFACFC,EAAAA,EAAAA,IAAA,mBAAsBD,EAAtB,4BAA4CE,IAD1C,cAClBE,EADkB,yBAEjBA,EAAQC,KAAKG,MAFI,2CAAH,sDAKZC,EAAe,mCAAG,WAAOT,GAAP,uFACLC,EAAAA,EAAAA,IAAA,mBAAsBD,EAAtB,4BAA4CE,IADvC,cACrBE,EADqB,yBAEpBA,EAAQC,KAAKC,SAFO,2CAAH,sDAKfI,EAAc,mCAAG,WAAOC,GAAP,uFACJV,EAAAA,EAAAA,IAAA,kCAAqCC,EAArC,kBAAqDS,IADjD,cACpBP,EADoB,yBAEnBA,EAAQC,KAAKC,SAFM,2CAAH,qD","sources":["components/Loader/Loader.jsx","pages/Cast/Cast.jsx","services/moviesApi.js"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"96\"\n      visible={true}\n    />\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { useEffect, useState } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\nimport { movieCastApi } from 'services/moviesApi';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    async function fatchitem() {\n      setLoading(true);\n      try {\n        const item = await movieCastApi(movieId);\n        setItems(item);\n      } catch (error) {\n        toast.error('Sorry... nothing found.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    fatchitem();\n  }, [movieId]);\n\n  return (\n    <>\n      {loading && <Loader />}\n      <ul>\n        {!loading &&\n          items.map(item => {\n            return (\n              <li key={item.id}>\n                <img\n                  src={`https://image.tmdb.org/t/p/w500${item.profile_path}`}\n                  alt={item.name}\n                  width=\"150\"\n                />\n                <p>{item.name}</p>\n                <p>Character: {item.character}</p>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst apiKey = '13896f610c2b15042c451786ce84a901';\n\nexport const moviesApi = async () => {\n    const respons = await axios.get(`/3/trending/movie/day?api_key=${apiKey}`);\n    \n    return respons.data.results;\n}\n\nexport const moviePageApi = async (id) => {\n    const respons = await axios.get(`/3/movie/${id}?api_key=${apiKey}&append_to_response=videos,images`);\n    return respons.data;\n}\n\nexport const movieCastApi = async (id) => {\n    const respons = await axios.get(`/3/movie/${id}/credits?api_key=${apiKey}`);\n    return respons.data.cast;\n}\n\nexport const movieReviewsApi = async (id) => {\n    const respons = await axios.get(`/3/movie/${id}/reviews?api_key=${apiKey}`);\n    return respons.data.results;\n}\n\nexport const movieSearchApi = async (search) => {\n    const respons = await axios.get(`/3/search/movie?api_key=${apiKey}&query=${search}`);\n    return respons.data.results;\n}\n\n// &append_to_response=videos,images\n// https://image.tmdb.org/t/p/w500/1E5baAaEse26fej7uHcjOgEE2t2.jpg"],"names":["Loader","strokeColor","strokeWidth","animationDuration","width","visible","movieId","useParams","useState","items","setItems","loading","setLoading","useEffect","movieCastApi","item","toast","fatchitem","map","src","profile_path","alt","name","character","id","axios","apiKey","moviesApi","respons","data","results","moviePageApi","cast","movieReviewsApi","movieSearchApi","search"],"sourceRoot":""}