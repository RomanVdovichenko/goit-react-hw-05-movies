{"version":3,"file":"static/js/278.b8907fb8.chunk.js","mappings":"6LAEaA,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,GAGd,C,6ICwDD,UA9De,WACb,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA8BL,EAAAA,EAAAA,WAAS,GAAvC,eAAOM,EAAP,KAAgBC,EAAhB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAQN,EAAaO,IAAI,SAkC/B,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCAMd,8GAEuBC,EAAAA,EAAAA,IAAeH,GAFtC,OAEUI,EAFV,OAGIZ,EAAUY,GACU,IAAhBA,EAAKC,QACPC,EAAAA,GAAAA,MAAY,6BALlB,gDAQIA,EAAAA,GAAAA,MAAY,6BARhB,yBAUIT,GAAW,GAVf,6EANc,sBACTG,GAILH,GAAW,GALG,mCAmBdU,IAjBEf,EAAU,GAkBb,GAAE,CAACQ,KAGF,iCACE,kBAAMQ,SAlCW,SAAAC,GACnBA,EAAMC,iBACN,IAAMC,EAASF,EAAMG,cAAcC,SAASb,MAAMc,MAAMC,OACxDpB,EAAgB,CAAEK,MAAOW,IACpBA,IACHL,EAAAA,GAAAA,QAAc,4BACdX,EAAgB,CAAC,GAEpB,EA0BiCqB,aAAa,MAA3C,WACE,kBAAOC,KAAK,OAAOC,KAAK,QAAQC,WAAS,KACzC,mBAAQF,KAAK,SAAb,SAAsB,cAEvBrB,IAAW,SAAC,IAAD,KACZ,yBACIA,GACAL,EAAO6B,KAAI,SAAAhB,GACT,OACE,yBACE,SAAC,KAAD,CAAMiB,GAAE,kBAAajB,EAAKkB,IAAMC,MAAO,CAAEC,KAAM1B,GAA/C,SACGM,EAAKqB,SAFDrB,EAAKkB,GAMjB,QAIV,C,mMChEDI,EAAAA,EAAAA,SAAAA,QAAyB,6BACzB,IAAMC,EAAS,mCAEFC,EAAS,mCAAG,oGACCF,EAAAA,EAAAA,IAAA,wCAA2CC,IAD5C,cACfE,EADe,yBAGdA,EAAQC,KAAKC,SAHC,2CAAH,qDAMTC,EAAY,mCAAG,WAAOV,GAAP,uFACFI,EAAAA,EAAAA,IAAA,mBAAsBJ,EAAtB,oBAAoCK,EAApC,sCADE,cAClBE,EADkB,yBAEjBA,EAAQC,MAFS,2CAAH,sDAKZG,EAAY,mCAAG,WAAOX,GAAP,uFACFI,EAAAA,EAAAA,IAAA,mBAAsBJ,EAAtB,4BAA4CK,IAD1C,cAClBE,EADkB,yBAEjBA,EAAQC,KAAKI,MAFI,2CAAH,sDAKZC,EAAe,mCAAG,WAAOb,GAAP,uFACLI,EAAAA,EAAAA,IAAA,mBAAsBJ,EAAtB,4BAA4CK,IADvC,cACrBE,EADqB,yBAEpBA,EAAQC,KAAKC,SAFO,2CAAH,sDAKf5B,EAAc,mCAAG,WAAOQ,GAAP,uFACJe,EAAAA,EAAAA,IAAA,kCAAqCC,EAArC,kBAAqDhB,IADjD,cACpBkB,EADoB,yBAEnBA,EAAQC,KAAKC,SAFM,2CAAH,qD","sources":["components/Loader/Loader.jsx","pages/Movies/Movies.jsx","services/moviesApi.js"],"sourcesContent":["import { RotatingLines } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <RotatingLines\n      strokeColor=\"grey\"\n      strokeWidth=\"5\"\n      animationDuration=\"0.75\"\n      width=\"96\"\n      visible={true}\n    />\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { Link, useLocation, useSearchParams } from 'react-router-dom';\nimport { movieSearchApi } from 'services/moviesApi';\nimport toast from 'react-hot-toast';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n  const query = searchParams.get('query');\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const search = event.currentTarget.elements.query.value.trim();\n    setSearchParams({ query: search });\n    if (!search) {\n      toast.success('Please, enter a request.');\n      setSearchParams({});\n    }\n  };\n\n  useEffect(() => {\n    if (!query) {\n      setMovies([]);\n      return;\n    }\n    setLoading(true);\n    async function fatchitem() {\n      try {\n        const item = await movieSearchApi(query);\n        setMovies(item);\n        if (item.length === 0) {\n          toast.error('Sorry... no movies found.');\n        }\n      } catch (error) {\n        toast.error('Sorry... no movies found.');\n      } finally {\n        setLoading(false);\n      }\n    }\n    fatchitem();\n  }, [query]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <input type=\"text\" name=\"query\" autoFocus />\n        <button type=\"submit\">Search</button>\n      </form>\n      {loading && <Loader />}\n      <ul>\n        {!loading &&\n          movies.map(item => {\n            return (\n              <li key={item.id}>\n                <Link to={`/movies/${item.id}`} state={{ from: location }}>\n                  {item.title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org';\nconst apiKey = '13896f610c2b15042c451786ce84a901';\n\nexport const moviesApi = async () => {\n    const respons = await axios.get(`/3/trending/movie/day?api_key=${apiKey}`);\n    \n    return respons.data.results;\n}\n\nexport const moviePageApi = async (id) => {\n    const respons = await axios.get(`/3/movie/${id}?api_key=${apiKey}&append_to_response=videos,images`);\n    return respons.data;\n}\n\nexport const movieCastApi = async (id) => {\n    const respons = await axios.get(`/3/movie/${id}/credits?api_key=${apiKey}`);\n    return respons.data.cast;\n}\n\nexport const movieReviewsApi = async (id) => {\n    const respons = await axios.get(`/3/movie/${id}/reviews?api_key=${apiKey}`);\n    return respons.data.results;\n}\n\nexport const movieSearchApi = async (search) => {\n    const respons = await axios.get(`/3/search/movie?api_key=${apiKey}&query=${search}`);\n    return respons.data.results;\n}\n\n// &append_to_response=videos,images\n// https://image.tmdb.org/t/p/w500/1E5baAaEse26fej7uHcjOgEE2t2.jpg"],"names":["Loader","strokeColor","strokeWidth","animationDuration","width","visible","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","loading","setLoading","location","useLocation","query","get","useEffect","movieSearchApi","item","length","toast","fatchitem","onSubmit","event","preventDefault","search","currentTarget","elements","value","trim","autoComplete","type","name","autoFocus","map","to","id","state","from","title","axios","apiKey","moviesApi","respons","data","results","moviePageApi","movieCastApi","cast","movieReviewsApi"],"sourceRoot":""}